[33mcommit c71638c31f8ca1f9a2bada6c65771549c91600d1[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m)[m
Author: chris <chris.russo99@gmail.com>
Date:   Mon Aug 25 15:09:33 2025 -0300

    1231222

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex b17cd073..1f505537 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -33,7 +33,11 @@[m [mdist-ssr[m
 [m
 .husky[m
 [m
[31m-[m
 tauri.ke[m
 tauri.ke.pub[m
[31m-.env[m
\ No newline at end of file[m
[32m+[m[32m.env[m
[32m+[m
[32m+[m[32m# SSL.com API credentials[m
[32m+[m[32m**/llaves.py[m
[32m+[m[32m**/credentials.py[m
[32m+[m[32m**/secrets.py[m
\ No newline at end of file[m
[1mdiff --git a/scripts/ssl_api/llaves.template.py b/scripts/ssl_api/llaves.template.py[m
[1mnew file mode 100644[m
[1mindex 00000000..91d7d441[m
[1m--- /dev/null[m
[1m+++ b/scripts/ssl_api/llaves.template.py[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m#!/usr/bin/env python3[m
[32m+[m
[32m+[m[32m# SSL.com API Credentials Template[m
[32m+[m[32m# Rename this file to llaves.py and fill in your credentials[m
[32m+[m[32m# Get your credentials from: https://www.ssl.com/account/api/[m
[32m+[m
[32m+[m[32m# Account Key from SSL.com Dashboard > API Access[m
[32m+[m[32mSSL_ACCOUNT_KEY = "your_account_key_here"[m
[32m+[m
[32m+[m[32m# Secret Key from SSL.com Dashboard > API Access[m
[32m+[m[32mSSL_SECRET_KEY = "your_secret_key_here"[m
[1mdiff --git a/scripts/ssl_api/main.py b/scripts/ssl_api/main.py[m
[1mindex af751a25..2ec2e7fe 100644[m
[1m--- a/scripts/ssl_api/main.py[m
[1m+++ b/scripts/ssl_api/main.py[m
[36m@@ -18,6 +18,8 @@[m [mdef view_api_map():[m
     with open('API_MAP.md', 'r', encoding='utf-8') as f:[m
         print(f.read())[m
 [m
[32m+[m[32mfrom retro_sounds import RetroSounds[m
[32m+[m
 def show_intro():[m
     """Muestra una intro retro"""[m
     os.system('cls')[m
[36m@@ -38,10 +40,10 @@[m [mdef show_intro():[m
     loading_text = "INITIALIZING SECURE CONNECTION"[m
     for i in range(3):[m
         print(f"\r{loading_text}{'.' * (i + 1)}   ", end='')[m
[31m-        winsound.Beep(440 + i * 100, 200)[m
[32m+[m[32m        RetroSounds.play_pattern('typing')[m
         time.sleep(0.5)[m
     print("\n\nACCESS GRANTED!")[m
[31m-    winsound.Beep(880, 200)[m
[32m+[m[32m    RetroSounds.play_powerup()[m
     time.sleep(1)[m
 [m
 def main():[m
[1mdiff --git a/scripts/ssl_api/menu.py b/scripts/ssl_api/menu.py[m
[1mindex 7658360c..033133c0 100644[m
[1m--- a/scripts/ssl_api/menu.py[m
[1m+++ b/scripts/ssl_api/menu.py[m
[36m@@ -7,19 +7,7 @@[m [mimport winsound[m
 import random[m
 from typing import List, Callable, Optional[m
 [m
[31m-# Efectos de sonido retro[m
[31m-def beep_select():[m
[31m-    winsound.Beep(1000, 50)[m
[31m-[m
[31m-def beep_move():[m
[31m-    winsound.Beep(750, 30)[m
[31m-    [m
[31m-def beep_error():[m
[31m-    winsound.Beep(250, 100)[m
[31m-    [m
[31m-def beep_success():[m
[31m-    for f in [523, 659, 784]:  # Notas Do-Mi-Sol[m
[31m-        winsound.Beep(f, 100)[m
[32m+[m[32mfrom retro_sounds import RetroSounds[m
 [m
 # Arte ASCII retro[m
 BORDER_H = "‚ïê"[m
[36m@@ -102,18 +90,18 @@[m [mclass Menu:[m
         [m
         # Escape[m
         if key == b'\x1b':[m
[31m-            beep_error()[m
[32m+[m[32m            RetroSounds.play_error()[m
             return True[m
             [m
         # Enter[m
         if key == b'\r':[m
[31m-            beep_select()[m
[32m+[m[32m            RetroSounds.play_menu_select()[m
             item = self.items[self.selected][m
             if item.action:[m
                 self._clear_screen()[m
                 self._loading_animation("LOADING", 1.0)[m
                 item.action()[m
[31m-                beep_success()[m
[32m+[m[32m                RetroSounds.play_success()[m
                 input("\nPresiona Enter para continuar...")[m
             elif item.submenu:[m
                 submenu = Menu(item.title, item.submenu)[m
[36m@@ -122,14 +110,18 @@[m [mclass Menu:[m
             [m
         # Flecha arriba[m
         if key == b'H':[m
[31m-            beep_move()[m
[32m+[m[32m            RetroSounds.play_menu_move()[m
             self.selected = (self.selected - 1) % len(self.items)[m
             [m
         # Flecha abajo[m
         if key == b'P':[m
[31m-            beep_move()[m
[32m+[m[32m            RetroSounds.play_menu_move()[m
             self.selected = (self.selected + 1) % len(self.items)[m
             [m
[32m+[m[32m        # Cualquier otra tecla (para debug/diversi√≥n)[m
[32m+[m[32m        else:[m
[32m+[m[32m            RetroSounds.play_typing_sound()[m
[32m+[m[41m            [m
         return False[m
         [m
     def display(self):[m
[1mdiff --git a/scripts/ssl_api/retro_sounds.py b/scripts/ssl_api/retro_sounds.py[m
[1mnew file mode 100644[m
[1mindex 00000000..25d47f4c[m
[1m--- /dev/null[m
[1m+++ b/scripts/ssl_api/retro_sounds.py[m
[36m@@ -0,0 +1,109 @@[m
[32m+[m[32m#!/usr/bin/env python3[m
[32m+[m[32mimport winsound[m
[32m+[m[32mimport random[m
[32m+[m[32mimport time[m
[32m+[m[32mfrom typing import List, Tuple[m
[32m+[m
[32m+[m[32mclass RetroSounds:[m
[32m+[m[32m    # Notas musicales (frecuencias en Hz)[m
[32m+[m[32m    NOTES = {[m
[32m+[m[32m        'C4': 262,  # Do[m
[32m+[m[32m        'D4': 294,  # Re[m
[32m+[m[32m        'E4': 330,  # Mi[m
[32m+[m[32m        'F4': 349,  # Fa[m
[32m+[m[32m        'G4': 392,  # Sol[m
[32m+[m[32m        'A4': 440,  # La[m
[32m+[m[32m        'B4': 494,  # Si[m
[32m+[m[32m        'C5': 523,  # Do alto[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    # Patrones mel√≥dicos (nota, duraci√≥n en ms)[m
[32m+[m[32m    PATTERNS = {[m
[32m+[m[32m        'coin': [[m
[32m+[m[32m            ('B4', 50),[m
[32m+[m[32m            ('E4', 130)[m
[32m+[m[32m        ],[m
[32m+[m[32m        'powerup': [[m
[32m+[m[32m            ('G4', 50),[m
[32m+[m[32m            ('B4', 50),[m
[32m+[m[32m            ('D4', 50),[m
[32m+[m[32m            ('G4', 150)[m
[32m+[m[32m        ],[m
[32m+[m[32m        'typing': [[m
[32m+[m[32m            # Patr√≥n 1: Escala ascendente r√°pida[m
[32m+[m[32m            [('C4', 30), ('E4', 30), ('G4', 30)],[m
[32m+[m[32m            # Patr√≥n 2: Arpegio descendente[m
[32m+[m[32m            [('C5', 30), ('G4', 30), ('E4', 30)],[m
[32m+[m[32m            # Patr√≥n 3: Ping pong[m
[32m+[m[32m            [('E4', 30), ('B4', 30), ('E4', 30)],[m
[32m+[m[32m            # Patr√≥n 4: Saltos[m
[32m+[m[32m            [('C4', 30), ('G4', 30), ('C5', 30)],[m
[32m+[m[32m        ],[m
[32m+[m[32m        'error': [[m
[32m+[m[32m            ('E4', 100),[m
[32m+[m[32m            ('C4', 200)[m
[32m+[m[32m        ],[m
[32m+[m[32m        'success': [[m
[32m+[m[32m            ('C4', 50),[m
[32m+[m[32m            ('E4', 50),[m
[32m+[m[32m            ('G4', 50),[m
[32m+[m[32m            ('C5', 150)[m
[32m+[m[32m        ],[m
[32m+[m[32m        'menu_move': [[m
[32m+[m[32m            ('A4', 20),[m
[32m+[m[32m            ('B4', 20)[m
[32m+[m[32m        ],[m
[32m+[m[32m        'menu_select': [[m
[32m+[m[32m            ('C5', 40),[m
[32m+[m[32m            ('G4', 80)[m
[32m+[m[32m        ][m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def play_pattern(cls, pattern_name: str):[m
[32m+[m[32m        """Reproduce un patr√≥n predefinido"""[m
[32m+[m[32m        if pattern_name not in cls.PATTERNS:[m
[32m+[m[32m            return[m
[32m+[m[41m            [m
[32m+[m[32m        pattern = cls.PATTERNS[pattern_name][m
[32m+[m[32m        if isinstance(pattern[0], list):  # Si es una lista de patrones, elegir uno al azar[m
[32m+[m[32m            pattern = random.choice(pattern)[m
[32m+[m[41m            [m
[32m+[m[32m        for note, duration in pattern:[m
[32m+[m[32m            winsound.Beep(cls.NOTES[note], duration)[m
[32m+[m[41m            [m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def play_typing_sound(cls):[m
[32m+[m[32m        """Sonido aleatorio para typing con probabilidad variable"""[m
[32m+[m[32m        if random.random() < 0.3:  # 30% de chance de sonido[m
[32m+[m[32m            cls.play_pattern('typing')[m
[32m+[m[41m        [m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def play_mario_coin(cls):[m
[32m+[m[32m        """El cl√°sico sonido de moneda"""[m
[32m+[m[32m        cls.play_pattern('coin')[m
[32m+[m[41m        [m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def play_powerup(cls):[m
[32m+[m[32m        """Sonido tipo power-up"""[m
[32m+[m[32m        cls.play_pattern('powerup')[m
[32m+[m[41m        [m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def play_error(cls):[m
[32m+[m[32m        """Sonido de error"""[m
[32m+[m[32m        cls.play_pattern('error')[m
[32m+[m[41m        [m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def play_success(cls):[m
[32m+[m[32m        """Melod√≠a de √©xito"""[m
[32m+[m[32m        cls.play_pattern('success')[m
[32m+[m[41m        [m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def play_menu_move(cls):[m
[32m+[m[32m        """Sonido al mover en men√∫"""[m
[32m+[m[32m        cls.play_pattern('menu_move')[m
[32m+[m[41m        [m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def play_menu_select(cls):[m
[32m+[m[32m        """Sonido al seleccionar en men√∫"""[m
[32m+[m[32m        cls.play_pattern('menu_select')[m

[33mcommit 011e9573b83a860d655332a1e44b02f5ecfdd085[m
Author: chris <chris.russo99@gmail.com>
Date:   Mon Aug 25 15:06:19 2025 -0300

    123123!

[1mdiff --git a/scripts/create_users/__pycache__/llaves.cpython-310.pyc b/scripts/create_users/__pycache__/llaves.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 00000000..71dea712[m
Binary files /dev/null and b/scripts/create_users/__pycache__/llaves.cpython-310.pyc differ
[1mdiff --git a/scripts/create_users/abstraccion.txt b/scripts/create_users/abstraccion.txt[m
[1mnew file mode 100644[m
[1mindex 00000000..054ca896[m
[1m--- /dev/null[m
[1m+++ b/scripts/create_users/abstraccion.txt[m
[36m@@ -0,0 +1,89 @@[m
[32m+[m[32m=== AN√ÅLISIS DE CREATE_USERS.BAT ===[m
[32m+[m
[32m+[m[32mPAR√ÅMETROS RECIBIDOS:[m
[32m+[m[32m1. ACCOUNT_KEY: "d47f660f18cd"[m
[32m+[m[32m2. SECRET_KEY: "AJbPUYI1fO5rRA=="[m
[32m+[m[32m3. NEW_LOGIN: "chrisrusso2"[m
[32m+[m[32m4. NEW_EMAIL: "chris.russo99@gmail.com"[m
[32m+[m[32m5. NEW_PASSWORD: "Nzmxcn!!!znxm!!22988"[m
[32m+[m
[32m+[m[32mENDPOINT TARGET:[m
[32m+[m[32m- Host: sws.sslpki.com[m
[32m+[m[32m- URL: https://sws.sslpki.com/users[m
[32m+[m[32m- M√©todo: POST[m
[32m+[m[32m- Certificado: ../SSL_COM_ROOT_CERTIFICATION_AUTHORITY_RSA.crt[m
[32m+[m
[32m+[m[32mREQUEST HTTP:[m
[32m+[m[32mPOST /users HTTP/1.1[m
[32m+[m[32mHost: sws.sslpki.com[m
[32m+[m[32mAccept: application/json[m
[32m+[m[32mContent-Type: application/x-www-form-urlencoded[m
[32m+[m
[32m+[m[32mlogin=chrisrusso2&email=chris.russo99%40gmail.com&password=Nzmxcn!!!znxm!!22988&account_key=d47f660f18cd&secret_key=AJbPUYI1fO5rRA%3D%3D[m
[32m+[m
[32m+[m[32mFLUJO DE EJECUCI√ìN:[m
[32m+[m[32m1. Script recibe 5 par√°metros posicionales[m
[32m+[m[32m2. Configura variables de entorno y URL base[m
[32m+[m[32m3. Realiza POST usando curl con:[m
[32m+[m[32m   - Certificado SSL espec√≠fico (--cacert)[m
[32m+[m[32m   - Headers Accept y Content-Type[m
[32m+[m[32m   - URL encoding autom√°tico de par√°metros[m
[32m+[m[32m   - Output a create_users.json[m
[32m+[m[32m   - M√©tricas de tiempo y status HTTP[m
[32m+[m
[32m+[m[32mMANEJO DE ERRORES:[m
[32m+[m[32m- Si curl falla (errorlevel != 0):[m
[32m+[m[32m  * Muestra "‚úó ERROR: La peticion fallo"[m
[32m+[m[32m  * Pausa ejecuci√≥n[m
[32m+[m[32m  * Sale con c√≥digo 1[m
[32m+[m[32m- Si create_users.json no existe:[m
[32m+[m[32m  * Muestra "X Error: No se pudo crear el archivo create_users.json"[m
[32m+[m
[32m+[m[32mREPRODUCCI√ìN DE ERROR:[m
[32m+[m[32mPara reproducir en browser, el principal problema ser√° el certificado SSL. El BAT usa un certificado root espec√≠fico que el browser no tiene. Opciones:[m
[32m+[m
[32m+[m[32m1. Usando fetch (fallar√° por SSL):[m
[32m+[m[32m```javascript[m
[32m+[m[32mfetch('https://sws.sslpki.com/users', {[m
[32m+[m[32m  method: 'POST',[m
[32m+[m[32m  headers: {[m
[32m+[m[32m    'Accept': 'application/json',[m
[32m+[m[32m    'Content-Type': 'application/x-www-form-urlencoded'[m
[32m+[m[32m  },[m
[32m+[m[32m  body: new URLSearchParams({[m
[32m+[m[32m    login: 'chrisrusso2',[m
[32m+[m[32m    email: 'chris.russo99@gmail.com',[m
[32m+[m[32m    password: 'Nzmxcn!!!znxm!!22988',[m
[32m+[m[32m    account_key: 'd47f660f18cd',[m
[32m+[m[32m    secret_key: 'AJbPUYI1fO5rRA=='[m
[32m+[m[32m  }).toString()[m
[32m+[m[32m})[m
[32m+[m[32m.then(r => r.text())[m
[32m+[m[32m.then(console.log)[m
[32m+[m[32m.catch(console.error);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m2. Usando curl (funcionar√°):[m
[32m+[m[32m```bash[m
[32m+[m[32mcurl -X POST "https://sws.sslpki.com/users" \[m
[32m+[m[32m     --cacert "SSL_COM_ROOT_CERTIFICATION_AUTHORITY_RSA.crt" \[m
[32m+[m[32m     -H "Accept: application/json" \[m
[32m+[m[32m     -H "Content-Type: application/x-www-form-urlencoded" \[m
[32m+[m[32m     --data-urlencode "login=chrisrusso2" \[m
[32m+[m[32m     --data-urlencode "email=chris.russo99@gmail.com" \[m
[32m+[m[32m     --data-urlencode "password=Nzmxcn!!!znxm!!22988" \[m
[32m+[m[32m     --data-urlencode "account_key=d47f660f18cd" \[m
[32m+[m[32m     --data-urlencode "secret_key=AJbPUYI1fO5rRA=="[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mERRORES COMUNES:[m
[32m+[m[32m1. SSL_CERT_ERROR: El certificado de sws.sslpki.com no es confiable sin el root cert[m
[32m+[m[32m2. 400 Bad Request: Par√°metros faltantes o malformados[m
[32m+[m[32m3. 401 Unauthorized: account_key/secret_key inv√°lidos[m
[32m+[m[32m4. 409 Conflict: Usuario/email ya existe[m
[32m+[m
[32m+[m[32mNOTAS:[m
[32m+[m[32m- El script guarda output en create_users.json[m
[32m+[m[32m- Muestra m√©tricas de tiempo y status HTTP[m
[32m+[m[32m- URL encoding es manejado autom√°ticamente por curl[m
[32m+[m[32m- Requiere certificado SSL espec√≠fico para TLS[m
[1mdiff --git a/scripts/create_users/create_users.bat b/scripts/create_users/create_users.bat[m
[1mdeleted file mode 100644[m
[1mindex 26b3e586..00000000[m
[1m--- a/scripts/create_users/create_users.bat[m
[1m+++ /dev/null[m
[36m@@ -1,59 +0,0 @@[m
[31m-@echo off[m
[31m-setlocal enabledelayedexpansion[m
[31m-[m
[31m-set ACCOUNT_KEY=%1[m
[31m-set SECRET_KEY=%2[m
[31m-set NEW_LOGIN=%3[m
[31m-set NEW_EMAIL=%4[m
[31m-set NEW_PASSWORD=%5[m
[31m-set HOST=sws.sslpki.com[m
[31m-set BASE_URL=https://%HOST%[m
[31m-[m
[31m-echo Solicitando token de acceso...[m
[31m-echo URL: %BASE_URL%[m
[31m-echo.[m
[31m-[m
[31m-echo Par√°metros:[m
[31m-echo Login: %NEW_LOGIN%[m
[31m-echo Email: %NEW_EMAIL%[m
[31m-echo Password: [OCULTO][m
[31m-echo Account Key: %ACCOUNT_KEY%[m
[31m-echo Secret Key: [OCULTO][m
[31m-echo.[m
[31m-[m
[31m-echo Haciendo la petici√≥n con URL encoding autom√°tico...[m
[31m-echo.[m
[31m-set CERT_PATH=..\SSL_COM_ROOT_CERTIFICATION_AUTHORITY_RSA.crt[m
[31m-[m
[31m-curl -X POST "%BASE_URL%/users" ^[m
[31m-     --cacert "%CERT_PATH%" ^[m
[31m-     -H "Accept: application/json" ^[m
[31m-     -H "Content-Type: application/x-www-form-urlencoded" ^[m
[31m-     --data-urlencode "login=%NEW_LOGIN%" ^[m
[31m-     --data-urlencode "email=%NEW_EMAIL%" ^[m
[31m-     --data-urlencode "password=%NEW_PASSWORD%" ^[m
[31m-     --data-urlencode "account_key=%ACCOUNT_KEY%" ^[m
[31m-     --data-urlencode "secret_key=%SECRET_KEY%" ^[m
[31m-     -o create_users.json ^[m
[31m-     -w "HTTP Status: %%{http_code}\nTime: %%{time_total}s\n"[m
[31m-[m
[31m-echo.[m
[31m-[m
[31m-if %errorlevel% neq 0 ([m
[31m-    echo ‚úó ERROR: La peticion fallo[m
[31m-    echo.[m
[31m-    pause[m
[31m-    exit /b 1[m
[31m-)[m
[31m-[m
[31m-echo CONTENIDO DE LA RESPUESTA:[m
[31m-if exist create_users.json ([m
[31m-    type create_users.json[m
[31m-    echo.[m
[31m-    echo * Archivo create_users.json creado exitosamente[m
[31m-) else ([m
[31m-    echo X Error: No se pudo crear el archivo create_users.json[m
[31m-)[m
[31m-[m
[31m-echo.[m
[31m-pause[m
\ No newline at end of file[m
[1mdiff --git a/scripts/create_users/create_users.py b/scripts/create_users/create_users.py[m
[1mnew file mode 100644[m
[1mindex 00000000..afe4dc57[m
[1m--- /dev/null[m
[1m+++ b/scripts/create_users/create_users.py[m
[36m@@ -0,0 +1,360 @@[m
[32m+[m[32m#!/usr/bin/env python3[m
[32m+[m[32mimport requests[m
[32m+[m[32mimport sys[m
[32m+[m[32mimport os[m
[32m+[m[32mfrom urllib.parse import urljoin[m
[32m+[m[32mimport json[m
[32m+[m[32mfrom pathlib import Path[m
[32m+[m[32mfrom datetime import datetime[m
[32m+[m[32mimport logging[m
[32m+[m[32mimport re[m
[32m+[m[32mimport time[m
[32m+[m[32mfrom typing import Tuple, Optional[m
[32m+[m
[32m+[m[32m# Importar credenciales[m
[32m+[m[32mtry:[m
[32m+[m[32m    from llaves import SSL_ACCOUNT_KEY, SSL_SECRET_KEY[m
[32m+[m[32mexcept ImportError:[m
[32m+[m[32m    print("‚ö†Ô∏è  No se encontr√≥ el archivo llaves.py con las credenciales")[m
[32m+[m[32m    SSL_ACCOUN
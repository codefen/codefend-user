name: TestCI

defaults:
  run: {shell: bash}

on:
  workflow_call:
  workflow_dispatch:

jobs:
  linting:
    name: Run Linting with 20.x
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 20.x

      - name: Setup/ Install pnpm 9.7.0 manually
        run: npm install -g pnpm@9.7.0

      - name: Install frontend dependencies
        run: |
          pnpm config set store-dir ~/.pnpm-store
          pnpm install --frozen-lockfile --ignore-scripts

      - name: Install rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev \
            pkg-config

      - name: Run Format
        run: pnpm format

      - name: Run Linter
        run: pnpm lint

      - name: Run CSS Linter
        run: pnpm lint:css

      - name: Run Cargo Tests
        working-directory: ./src-tauri
        run: |
          cargo test --all

  build:
    needs: [linting]
    strategy:
      matrix:
        node-version: [20.x]
    name: Build with ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4.0.3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup/ Install pnpm 9.7.0 manually
        run: npm install -g pnpm@9.7.0

      - name: Install dependencies
        run: pnpm i --prefer-frozen-lockfile --ignore-scripts

      - name: Run build client
        run: pnpm build

      - name: Run prune
        run: pnpm prune --prod --ignore-scripts

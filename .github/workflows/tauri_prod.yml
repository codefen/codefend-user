
name: 'Publish App'

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  test:
    uses: ./.github/workflows/ValidateClient.yml
    secrets: inherit

  release:
    needs: [test]
    if: "github.event.repository.fork == false"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev \
            pkg-config

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup/ Install pnpm 9.7.0 manually
        run: npm install -g pnpm@9.7.0

      - name: Install dependencies
        run: pnpm install

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  build-and-publish:
    needs: [release]
    if: "github.event.repository.fork == false"
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Release Version
        id: get-version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Setup Tauri Signing Key
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        run: |
          echo "$TAURI_PRIVATE_KEY" > tauri_private_key
          chmod 600 tauri_private_key

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup/ Install pnpm 9.7.0 manually
        run: npm install -g pnpm@9.7.0

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-on-failure: true

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build and Sign Tauri App
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          pnpm tauri build ${{ matrix.args }}
          
          # Firma de binarios
          if [[ "${{ matrix.platform }}" != "windows-latest" ]]; then
            find src-tauri/target/release/bundle -type f \( -name "*.app" -o -name "*.dmg" -o -name "*.deb" -o -name "*.AppImage" \) -print0 | while read -d $'\0' file; do
              pnpm tauri signer sign --private-key tauri_private_key -f "$file"
            done
          else
            Get-ChildItem -Path "src-tauri\target\release\bundle" -Recurse -Include "*.exe", "*.msi" | ForEach-Object {
              pnpm tauri signer sign --private-key tauri_private_key -f $_.FullName
            }
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-binaries
          path: src-tauri/target/release/bundle/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            src-tauri/target/release/bundle/**/*
          tag_name: v${{ steps.get-version.outputs.VERSION }}